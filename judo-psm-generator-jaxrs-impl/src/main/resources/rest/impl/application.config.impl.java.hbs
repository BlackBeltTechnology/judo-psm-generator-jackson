{{> fragment.header.hbs }}

package {{ namedElementImplPackageName self }};

@javax.ws.rs.ApplicationPath("{{ namedElementRestPath self }}/{{ className self }}")
public class {{ applicationImplClassName self }} extends javax.ws.rs.core.Application implements {{ applicationFqName self }} {

    private final java.util.Map<java.lang.String, java.lang.Object> properties = new java.util.TreeMap();

{{# each self.getAllExposedTransferObjectTypesFromAccessPointWithOperation as | to | }}
    {{ namedElementApiRestFqName }} {{ variableName to }};
{{/ each }}

{{# each self.getAllExposedTransferObjectTypesFromAccessPointWithOperation as | to | }}
    public void set_{{ variableName to }}({{ namedElementApiRestFqName to }} instance) {
        this.{{ variableName to }} = instance;
    }
{{/ each }}

    @Override
    public java.util.Set getSingletons() {
        return new java.util.HashSet(java.util.Arrays.asList(
        {{# each self.getAllExposedTransferObjectTypesFromAccessPointWithOperation as | to | }}
            {{ variableName to }}{{# unless @last }},{{/ unless }}
        {{/ each }}
        ));
    }

    @Override
    public java.util.Map<java.lang.String, java.lang.Object> getProperties() {
        return java.util.Collections.unmodifiableMap(this.properties);
    }

    @Override
    public void setContext(java.lang.Object context) {
        properties.put("context", context);
    }

}

