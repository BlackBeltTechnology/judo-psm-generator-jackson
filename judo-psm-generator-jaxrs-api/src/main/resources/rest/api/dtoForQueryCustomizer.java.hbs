{{> fragment.header.hbs }}

package {{ queryCustomizerPackageName self }};

/**
* Query customizer for searching {@link {{ classFqName self }} } instances.
*/
@com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)
{{# if generateOpenApiAnnotations }}
@io.swagger.v3.oas.annotations.media.Schema(name = "{{ classNameLogicalFullNameForRequest self }}")
{{/ if }}
public class {{ queryCustomizerName self }} {
{{# each self.relations as | relation | }}
    {{# unless (mappedRelationIsAssociation relation)}}
        {{# if generateOpenApiAnnotations }}
        @io.swagger.v3.oas.annotations.media.Schema(name = "{{ relation.name }}"{{# if relation.required }}, required = true{{/ if }})
        {{/ if }}
        private {{{ relationTargetTypeDefinitionForRequest relation }}} {{ safeName relation.name }};

        public {{{ relationTargetTypeDefinitionForRequest relation  }}} get{{ relation.name.firstToUpperCase }}() {
        return this.{{ safeName relation.name }};
        }

        public void set{{ relation.name.firstToUpperCase }}({{{ relationTargetTypeDefinitionForRequest relation }}} {{ safeName relation.name }}) {
        this.{{ safeName relation.name }} = {{ safeName relation.name }};
        }
    {{/ unless }}
{{/ each }}

{{# each self.attributes as | attribute | }}
    {{# unless (isQueryOrDefaultValueOrDataPropertyAttribute attribute) }}

        private {{{ attributeTargetTypeDefinition attribute }}} {{ safeName attribute.name }};

        {{# if generateOpenApiAnnotations }}
        @io.swagger.v3.oas.annotations.media.Schema(name = "{{ attribute.name }}"{{# if attribute.required }}, required = true{{/ if }})
        {{/ if }}
        public {{{ attributeTargetTypeDefinition attribute }}} get{{ attribute.name.firstToUpperCase }}() {
        return this.{{ safeName attribute.name }};
        };
        public void set{{ attribute.name.firstToUpperCase }}({{{ attributeTargetTypeDefinition attribute }}} {{ safeName attribute.name }}) {
        this.{{ safeName attribute.name }} = {{ safeName attribute.name }};
        };

    {{/ unless }}
{{/ each }}
}