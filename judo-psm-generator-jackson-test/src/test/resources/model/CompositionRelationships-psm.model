<?xml version="1.0" encoding="UTF-8"?>
<namespace:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:data="http://blackbelt.hu/judo/meta/psm/data" xmlns:namespace="http://blackbelt.hu/judo/meta/psm/namespace" xmlns:service="http://blackbelt.hu/judo/meta/psm/service" xmlns:type="http://blackbelt.hu/judo/meta/psm/type" xsi:schemaLocation="http://blackbelt.hu/judo/meta/psm/data http://blackbelt.hu/judo/meta/psm#//data http://blackbelt.hu/judo/meta/psm/namespace http://blackbelt.hu/judo/meta/psm#//namespace http://blackbelt.hu/judo/meta/psm/service http://blackbelt.hu/judo/meta/psm#//service http://blackbelt.hu/judo/meta/psm/type http://blackbelt.hu/judo/meta/psm#//type" xmi:id="(jsl/CompositionRelationships)/CreateRootModel" name="CompositionRelationships">
  <packages xmi:id="(jsl/CompositionRelationships/CompositionRelationships)/CreateModelPackages" name="CompositionRelationships">
    <elements xsi:type="type:StringType" xmi:id="(jsl/CompositionRelationships/CompositionRelationships/String)/CreateStringType" name="String" maxLength="128"/>
    <elements xsi:type="data:EntityType" xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityA)/CreateEntityType" name="_EntityA" defaultRepresentation="(jsl/CompositionRelationships/CompositionRelationships/EntityA)/CreateEntityDefaultTransferObjectType">
      <attributes xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityA/stringA)/CreateAttributeFromField" name="stringA" dataType="(jsl/CompositionRelationships/CompositionRelationships/String)/CreateStringType"/>
      <relations xsi:type="data:Containment" xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityA/singleConA)/CreateContainmentFromField" name="singleConA" target="(jsl/CompositionRelationships/CompositionRelationships/EntityC)/CreateEntityType">
        <cardinality xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityA/singleConA)/CreateContainmentFromField/cardinality"/>
      </relations>
      <relations xsi:type="data:Containment" xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityA/singleRequiredConA)/CreateContainmentFromField" name="singleRequiredConA" target="(jsl/CompositionRelationships/CompositionRelationships/EntityC)/CreateEntityType">
        <cardinality xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityA/singleRequiredConA)/CreateContainmentFromField/cardinality" lower="1"/>
      </relations>
    </elements>
    <elements xsi:type="service:MappedTransferObjectType" xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityA)/CreateEntityDefaultTransferObjectType" name="EntityA" entityType="(jsl/CompositionRelationships/CompositionRelationships/EntityA)/CreateEntityType">
      <relations xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityA/singleConA)/CreateTransferObjectEmbeddedRelationForDefaultTransferObjectType" name="singleConA" binding="(jsl/CompositionRelationships/CompositionRelationships/EntityA/singleConA)/CreateContainmentFromField" target="(jsl/CompositionRelationships/CompositionRelationships/EntityC)/CreateEntityDefaultTransferObjectType" embedded="true" embeddedCreate="true" embeddedUpdate="true" embeddedDelete="true">
        <cardinality xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityA/singleConA)/CreateTransferObjectEmbeddedRelationForDefaultTransferObjectType/cardinality"/>
      </relations>
      <relations xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityA/singleRequiredConA)/CreateTransferObjectEmbeddedRelationForDefaultTransferObjectType" name="singleRequiredConA" binding="(jsl/CompositionRelationships/CompositionRelationships/EntityA/singleRequiredConA)/CreateContainmentFromField" target="(jsl/CompositionRelationships/CompositionRelationships/EntityC)/CreateEntityDefaultTransferObjectType" embedded="true" embeddedCreate="true" embeddedUpdate="true" embeddedDelete="true">
        <cardinality xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityA/singleRequiredConA)/CreateTransferObjectEmbeddedRelationForDefaultTransferObjectType/cardinality" lower="1"/>
      </relations>
      <attributes xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityA/stringA)/CreateTransferAttributeForDefaultTransferObjectType" name="stringA" dataType="(jsl/CompositionRelationships/CompositionRelationships/String)/CreateStringType" binding="(jsl/CompositionRelationships/CompositionRelationships/EntityA/stringA)/CreateAttributeFromField"/>
    </elements>
    <elements xsi:type="data:EntityType" xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityB)/CreateEntityType" name="_EntityB" abstract="true" defaultRepresentation="(jsl/CompositionRelationships/CompositionRelationships/EntityB)/CreateEntityDefaultTransferObjectType">
      <attributes xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityB/stringB)/CreateAttributeFromField" name="stringB" dataType="(jsl/CompositionRelationships/CompositionRelationships/String)/CreateStringType"/>
      <relations xsi:type="data:Containment" xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityB/multipleDonB)/CreateContainmentFromField" name="multipleDonB" target="(jsl/CompositionRelationships/CompositionRelationships/EntityD)/CreateEntityType">
        <cardinality xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityB/multipleDonB)/CreateContainmentFromField/cardinality" upper="-1"/>
      </relations>
    </elements>
    <elements xsi:type="service:MappedTransferObjectType" xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityB)/CreateEntityDefaultTransferObjectType" name="EntityB" entityType="(jsl/CompositionRelationships/CompositionRelationships/EntityB)/CreateEntityType">
      <relations xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityB/multipleDonB)/CreateTransferObjectEmbeddedRelationForDefaultTransferObjectType" name="multipleDonB" binding="(jsl/CompositionRelationships/CompositionRelationships/EntityB/multipleDonB)/CreateContainmentFromField" target="(jsl/CompositionRelationships/CompositionRelationships/EntityD)/CreateEntityDefaultTransferObjectType" embedded="true">
        <cardinality xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityB/multipleDonB)/CreateTransferObjectEmbeddedRelationForDefaultTransferObjectType/cardinality" upper="-1"/>
      </relations>
      <attributes xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityB/stringB)/CreateTransferAttributeForDefaultTransferObjectType" name="stringB" dataType="(jsl/CompositionRelationships/CompositionRelationships/String)/CreateStringType" binding="(jsl/CompositionRelationships/CompositionRelationships/EntityB/stringB)/CreateAttributeFromField"/>
    </elements>
    <elements xsi:type="data:EntityType" xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityC)/CreateEntityType" name="_EntityC" superEntityTypes="(jsl/CompositionRelationships/CompositionRelationships/EntityB)/CreateEntityType" defaultRepresentation="(jsl/CompositionRelationships/CompositionRelationships/EntityC)/CreateEntityDefaultTransferObjectType">
      <attributes xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityC/stringC)/CreateAttributeFromField" name="stringC" dataType="(jsl/CompositionRelationships/CompositionRelationships/String)/CreateStringType"/>
    </elements>
    <elements xsi:type="data:EntityType" xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityD)/CreateEntityType" name="_EntityD" defaultRepresentation="(jsl/CompositionRelationships/CompositionRelationships/EntityD)/CreateEntityDefaultTransferObjectType">
      <attributes xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityD/stringD)/CreateAttributeFromField" name="stringD" dataType="(jsl/CompositionRelationships/CompositionRelationships/String)/CreateStringType"/>
    </elements>
    <elements xsi:type="service:MappedTransferObjectType" xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityD)/CreateEntityDefaultTransferObjectType" name="EntityD" entityType="(jsl/CompositionRelationships/CompositionRelationships/EntityD)/CreateEntityType">
      <attributes xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityD/stringD)/CreateTransferAttributeForDefaultTransferObjectType" name="stringD" dataType="(jsl/CompositionRelationships/CompositionRelationships/String)/CreateStringType" binding="(jsl/CompositionRelationships/CompositionRelationships/EntityD/stringD)/CreateAttributeFromField"/>
    </elements>
    <elements xsi:type="service:MappedTransferObjectType" xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityC)/CreateEntityDefaultTransferObjectType" name="EntityC" entityType="(jsl/CompositionRelationships/CompositionRelationships/EntityC)/CreateEntityType">
      <relations xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityC)/CreateEntityDefaultTransferObjectType--(jsl/CompositionRelationships/CompositionRelationships/EntityB/multipleDonB)/CloneTransferObjectEmbeddedRelationForDefaultTransferObjectType" name="multipleDonB" binding="(jsl/CompositionRelationships/CompositionRelationships/EntityB/multipleDonB)/CreateContainmentFromField" target="(jsl/CompositionRelationships/CompositionRelationships/EntityD)/CreateEntityDefaultTransferObjectType" embedded="true">
        <cardinality xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityC)/CreateEntityDefaultTransferObjectType--(jsl/CompositionRelationships/CompositionRelationships/EntityB/multipleDonB)/CloneTransferObjectEmbeddedRelationForDefaultTransferObjectType/cardinality" upper="-1"/>
      </relations>
      <attributes xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityC)/CreateEntityDefaultTransferObjectType--(jsl/CompositionRelationships/CompositionRelationships/EntityB/stringB)/CloneTransferAttributeForDefaultTransferObjectType" name="stringB" dataType="(jsl/CompositionRelationships/CompositionRelationships/String)/CreateStringType" binding="(jsl/CompositionRelationships/CompositionRelationships/EntityB/stringB)/CreateAttributeFromField"/>
      <attributes xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityC/stringC)/CreateTransferAttributeForDefaultTransferObjectType" name="stringC" dataType="(jsl/CompositionRelationships/CompositionRelationships/String)/CreateStringType" binding="(jsl/CompositionRelationships/CompositionRelationships/EntityC/stringC)/CreateAttributeFromField"/>
    </elements>
    <elements xsi:type="data:EntityType" xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityE)/CreateEntityType" name="_EntityE" superEntityTypes="(jsl/CompositionRelationships/CompositionRelationships/EntityD)/CreateEntityType (jsl/CompositionRelationships/CompositionRelationships/EntityC)/CreateEntityType" defaultRepresentation="(jsl/CompositionRelationships/CompositionRelationships/EntityE)/CreateEntityDefaultTransferObjectType">
      <attributes xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityE/stringE)/CreateAttributeFromField" name="stringE" dataType="(jsl/CompositionRelationships/CompositionRelationships/String)/CreateStringType"/>
    </elements>
    <elements xsi:type="service:MappedTransferObjectType" xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityE)/CreateEntityDefaultTransferObjectType" name="EntityE" entityType="(jsl/CompositionRelationships/CompositionRelationships/EntityE)/CreateEntityType">
      <relations xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityE)/CreateEntityDefaultTransferObjectType--(jsl/CompositionRelationships/CompositionRelationships/EntityC)/CreateEntityDefaultTransferObjectType--(jsl/CompositionRelationships/CompositionRelationships/EntityB/multipleDonB)/CloneTransferObjectEmbeddedRelationForDefaultTransferObjectType" name="multipleDonB" binding="(jsl/CompositionRelationships/CompositionRelationships/EntityB/multipleDonB)/CreateContainmentFromField" target="(jsl/CompositionRelationships/CompositionRelationships/EntityD)/CreateEntityDefaultTransferObjectType" embedded="true">
        <cardinality xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityE)/CreateEntityDefaultTransferObjectType--(jsl/CompositionRelationships/CompositionRelationships/EntityC)/CreateEntityDefaultTransferObjectType--(jsl/CompositionRelationships/CompositionRelationships/EntityB/multipleDonB)/CloneTransferObjectEmbeddedRelationForDefaultTransferObjectType/cardinality" upper="-1"/>
      </relations>
      <attributes xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityE)/CreateEntityDefaultTransferObjectType--(jsl/CompositionRelationships/CompositionRelationships/EntityD/stringD)/CloneTransferAttributeForDefaultTransferObjectType" name="stringD" dataType="(jsl/CompositionRelationships/CompositionRelationships/String)/CreateStringType" binding="(jsl/CompositionRelationships/CompositionRelationships/EntityD/stringD)/CreateAttributeFromField"/>
      <attributes xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityE)/CreateEntityDefaultTransferObjectType--(jsl/CompositionRelationships/CompositionRelationships/EntityC/stringC)/CloneTransferAttributeForDefaultTransferObjectType" name="stringC" dataType="(jsl/CompositionRelationships/CompositionRelationships/String)/CreateStringType" binding="(jsl/CompositionRelationships/CompositionRelationships/EntityC/stringC)/CreateAttributeFromField"/>
      <attributes xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityE)/CreateEntityDefaultTransferObjectType--(jsl/CompositionRelationships/CompositionRelationships/EntityC)/CreateEntityDefaultTransferObjectType--(jsl/CompositionRelationships/CompositionRelationships/EntityB/stringB)/CloneTransferAttributeForDefaultTransferObjectType" name="stringB" dataType="(jsl/CompositionRelationships/CompositionRelationships/String)/CreateStringType" binding="(jsl/CompositionRelationships/CompositionRelationships/EntityB/stringB)/CreateAttributeFromField"/>
      <attributes xmi:id="(jsl/CompositionRelationships/CompositionRelationships/EntityE/stringE)/CreateTransferAttributeForDefaultTransferObjectType" name="stringE" dataType="(jsl/CompositionRelationships/CompositionRelationships/String)/CreateStringType" binding="(jsl/CompositionRelationships/CompositionRelationships/EntityE/stringE)/CreateAttributeFromField"/>
    </elements>
  </packages>
</namespace:Model>
